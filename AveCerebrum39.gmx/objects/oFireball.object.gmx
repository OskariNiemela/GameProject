<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sFireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gridX = 0;
gridY = 0;

FlightSpeed = 1920*DELTA_TIME;

PathToTake = path_add();
//Whether we have a destination.
Checked = false;

Owner = noone;

Flight = false;

image_speed = 12/DELTA_TIME;

Animation = sPl80Fireball;

BOIS = part_system_create();

fire_ef = part_type_create()
part_type_sprite(fire_ef,sFireBallEffect,0,0,1);
part_type_color1(fire_ef,c_red);
part_type_alpha3(fire_ef,1,1,0);
part_type_blend(fire_ef,1);
part_type_direction(fire_ef,175,185,0,2);
part_type_size(fire_ef,1,1.1,-0.1,0);
part_type_life(fire_ef,room_speed/1.5,room_speed);
part_type_orientation(fire_ef,0,0,0,3,0);
part_type_speed(fire_ef,150/room_speed,200/room_speed,-0.2,0);



fire_emitter = part_emitter_create(BOIS);
part_emitter_region(BOIS,fire_emitter,x-1,x+2,y-5,y+5,ps_shape_rectangle,ps_distr_invgaussian);
part_emitter_stream(BOIS,fire_emitter,fire_ef,-2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if Checked = false{
    if instance_exists(Owner){
        gridX = Owner.gridX;
        gridY = Owner.gridY;
        BeginX = map[gridX,gridY].x;
        BeginY = map[gridX,gridY].y;
        DestinationX = map[oCursor.MapWidth,oCursor.MapHeight].x;
        DestinationY = BeginY;
        
        
        part_emitter_region(BOIS,fire_emitter,x-1,x+2,y-5,y+5,ps_shape_rectangle,ps_distr_invgaussian);
        path_add_point(PathToTake,BeginX,BeginY,FlightSpeed);
        path_add_point(PathToTake,DestinationX,DestinationY,FlightSpeed);
        path_start(PathToTake,FlightSpeed,path_action_stop,1);
        Checked = true;
    }

}else{
    //Check whether we've hit an actor or not
    part_emitter_region(BOIS,fire_emitter,x-1,x+2,y-5,y+5,ps_shape_rectangle,ps_distr_invgaussian);
    CurrentSquare = instance_place(x,y,oNode);
    ActorHit = instance_exists(CurrentSquare.occupant);
    //If we've hit an actor
    if ActorHit{
        //Check whether they're an enemy or not
        if CurrentSquare.occupant.Owner = "Enemy" and CurrentSquare.occupant.PassThrough = false{
            //Explode
            Explosion = instance_create(CurrentSquare.x,CurrentSquare.y,oExplosion)
            Explosion.gridX = CurrentSquare.gridX;
            Explosion.gridY = CurrentSquare.gridY;
            Explosion.BOIS = BOIS;
            part_emitter_destroy(BOIS,fire_emitter);
            part_type_destroy(fire_ef);
            instance_destroy();
        }

    
    }
    if CurrentSquare.gridX = oCursor.MapWidth{
         //Explode
            Explosion = instance_create(CurrentSquare.x,CurrentSquare.y,oExplosion)
            Explosion.gridX = CurrentSquare.gridX;
            Explosion.gridY = CurrentSquare.gridY;
            Explosion.BOIS = BOIS;
            part_emitter_destroy(BOIS,fire_emitter);
            part_type_destroy(fire_ef);
            instance_destroy();
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   //Explode
        Explosion = instance_create(x,y,oExplosion)
        Explosion.gridX = CurrentSquare.gridX;
        Explosion.gridY = CurrentSquare.gridY;
        part_emitter_destroy(BOIS,fire_emitter);
        part_system_destroy(BOIS);
        part_type_destroy(fire_ef);
        
        instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
