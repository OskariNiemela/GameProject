<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawTable = ds_list_create();

drawColor = c_white;

 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(drawTable);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(Owner))
{
    draw_set_color_write_enable(true,true,true,false);
    draw_set_colour(drawColor);
    
    //draw_set_alpha(0.3);
    drawX = Owner.x;
    drawY = Owner.y;

    for( a = 0; a&lt;ds_list_size(drawTable);a++)
    {
        acttoon = drawTable[| a];
        switch acttoon
        {
            case"Up":
                draw_line_width(drawX,drawY,drawX,drawY-80,20);
                draw_circle(drawX,drawY,10,false)
                drawY -= 80;
            break;
            
            case"Down":
                draw_line_width(drawX,drawY,drawX,drawY+80,20);
                draw_circle(drawX,drawY,10,false)
                drawY += 80;
            break;
            
            case"Right":
                draw_line_width(drawX+80,drawY,drawX,drawY,20);
                draw_circle(drawX,drawY,10,false)
                drawX += 80;
            break;
            
            case"Left":
                draw_line_width(drawX-80,drawY,drawX,drawY,20);
                draw_circle(drawX,drawY,10,false)
                drawX -= 80;
            break;
            
            case 1:
                draw_sprite(sAbilityQueue,0,drawX,drawY);
            break;
            
            case 2:
                draw_sprite(sAbilityQueue,0,drawX,drawY);
            break;
            
            case 3:
                draw_sprite(sAbilityQueue,0,drawX,drawY);
            break;
            
            case "Attack":
                draw_sprite(sAttackQueue,0,drawX,drawY);
            
            break;
        }
    }
    draw_set_color_write_enable(true,true,true,true);
    draw_circle(drawX,drawY,10,false);
    //draw_set_alpha(1);
    draw_set_colour(c_white);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
