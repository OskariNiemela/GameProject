<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>State = "Idle";
audio_falloff_set_model(audio_falloff_exponent_distance);
audio_group_load(OverworldSFX);

SFXGain = 1;

SFXEmitter = audio_emitter_create();
audio_emitter_gain(SFXEmitter,SFXGain);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_emitter_gain(SFXEmitter,SFXGain);

if instance_exists(oPlayerWorld){
    x = oPlayerWorld.x;
    y = oPlayerWorld.y;
    audio_emitter_position(SFXEmitter,x,y,0);

}else{
    
    x = room_width/2;
    y = room_height/2;
    audio_emitter_position(SFXEmitter,x,y,0);
}
switch State{
    case "LessGain":
        if SFXGain &gt; 0{
            SFXGain -= 0.05;
            if SFXGain &lt;= 0
            {
                audio_emitter_gain(SFXEmitter,0);
            }
            else
            {
                audio_emitter_gain(SFXEmitter,SFXGain);
            }
            
            audio_play_sound_on(SFXEmitter,sndBlank,false,8);
        }
        State = "Idle";
    break;
    
    
    case "MoreGain":
        if SFXGain &lt; 1{
            SFXGain += 0.05;
            audio_emitter_gain(SFXEmitter,SFXGain);
            audio_play_sound_on(SFXEmitter,sndBlank,false,8);
        }
        State = "Idle";
    break;

    case "LoadSFX":
        audio_group_load(SFX);
        audio_falloff_set_model(audio_falloff_none);
        State = "LoadingSFX";     
    break;
    
    case "LoadingSFX":
        if audio_group_is_loaded(SFX){
            State = "Idle"
        
        }
    
    
    break;
    
    case "UnloadSFX":
        audio_falloff_set_model(audio_falloff_exponent_distance);
        audio_group_unload(SFX);
        State = "Idle";
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
