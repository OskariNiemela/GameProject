<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSlime</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startY = 0;
endY = 0;
startX = 0;
endX = 0;

peakY = 0;
peakX = 0;

gridX = 0;
gridY = 0;
jumpTimer = 0;
State = "Idle";

image_speed = 18*DELTA_TIME;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch State
{
    case "PlanRoute":
        peakY = endY-150;
        peakX = endX + abs(endX-x)/2;
        State = "Fly";
    break;
    
    case "Fly":
        jumpTimer += DELTA_TIME;
        
        
        if(jumpTimer+DELTA_TIME &gt; 1)
        {
            x = endX;
            y = endY;
            State = "Explode";
        }
        else
        {
            image_angle = point_direction(x,y, MoveInBezierCurve(jumpTimer,startX,peakX,endX),MoveInBezierCurve(jumpTimer,startY,peakY,endY));
            x = MoveInBezierCurve(jumpTimer,startX,peakX,endX);
            y = MoveInBezierCurve(jumpTimer,startY,peakY,endY);
        }
    break;
    
    case "Explode":
    
        slime = instance_create(x,y,oSlimeExplosion);
        slime.gridX = gridX;
        slime.gridY = gridY;
        slime.State = "Explode";
        instance_destroy();
    break;



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
