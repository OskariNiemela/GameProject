<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPl80</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>oActor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>InitializeActor("Player", "Bert", "Ranged", sPl80Attack, sPl80, sPl80Dead,sPl80Fireball,sPl80Shotgun,sPl80TakeOutGrenade,sPl80Return,sPlayerVictory,sPl80Hurt,oPlayerPortrait,sPl80Feet,oBertTorso);
InitializeExtraAnimations(sPl80Revive,sBlank,sPl80FireballReturn,sPl80ShotgunReturn,sPl80GrenadeReturn);
InitializeStats(1, 0, 0, 0, 8, 30, 4);

InitializeActorSounds(sndGunShot,sndFireballLaunch,sndShotgun,sndShotgun,sndHurt);

InitializeAbilities(oFireball,oShotgun,oStunGrenade,oStandIn,sFireballToolbar,sShotgunToolbar,sStunGrenadeToolbar,15,15,15,false,false,true);

initialize_effects(oPlayerPar,c_purple);

abilityAnims = ds_map_create();

ability = ds_list_create();
ability[| 0] = false;
ability[| 1] = sPl80Fireball;
ability[| 2] = sPl80FireballReturn;
ability[| 3] = 15;
ability[| 4] = sFireballToolbar;
ability[| 5] = sndFireballLaunch;

abilityAnims[? oFireball] = ability;


ability = ds_list_create();
ability[| 0] = false;
ability[| 1] = sPl80Shotgun;
ability[| 2] = sPl80ShotgunReturn;
ability[| 3] = 15;
ability[| 4] = sShotgunToolbar;
ability[| 5] = sndShotgun;

abilityAnims[? oShotgun] = ability;

ability = ds_list_create();
ability[| 0] = true;
ability[| 1] = sPl80TakeOutGrenade;
ability[| 2] = sPl80GrenadeReturn;
ability[| 3] = 15;
ability[| 4] = sStunGrenadeToolbar;
ability[| 5] = sndShotgun;
ability[| 6] = sPl80ThrowGrenade;

abilityAnims[? oStunGrenade] = ability;

ability = ds_list_create();
ability[| 0] = false;
ability[| 1] = sPl80Attack;
ability[| 2] = sPl80Return;
ability[| 3] = 15;
ability[| 4] = sHealBuff;
ability[| 5] = sndFireballLaunch;

abilityAnims[? oBoiComb] = ability;


Torso = oBertTorso;
Legs = sPl80Feet;
image_speed = AnimationSpeed;

AttackTime = 10/(0.70*Speed);
MovementTime = 5/(0.90*Speed);

TargetedAbilityAnim = sPl80ThrowGrenade;


AttackTimer = 0;
MovementTimer = 0;

Threat = 10;
MaxThreat = 10;
ThreatLevel = 10;

Stunned = sPl80Stunned;


ModHP = 0;
ModAttack = 1;
ModSpeed   = 0;
ModCritStr = 0;
ModThreat  = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>oBert</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
/*
switch State{  
             
     case "Begin":
   
        break;   


     case  "Return":
        AttackReturnAnim();
    break;
    
    case"Attack":
        RangedAttack(floor(random_range(MinAttack,AttackStats)+ModAttack),Attack,oBullet,1);
    
    break;
    
    
    
    case "Attacking":

    break;
        
    case "Move":

    break;
    
    case "Idle":

    break;
    
    case "Victory":

    
    break;
    
    case "Hurt":

    break;
    
    case "TakingDamage":

    break;
    
    
    case "EndTurn":

    break;

    case "UsingAbility":
        if UsingAbility = Abilities[0]{
            AbilityCooldown1 = 20;
            State = "AbilityAnimation";
            AbilityAnimation = Ability1Animation;
        }else{
            AbilityCooldown2 = 15;
            State = "AbilityAnimation";
            AbilityAnimation = Ability2Animation;
        }
       
    
    break;
    
    case "AbilityAnimation":
        AbilityAnimations();
    
    
    break
    
    case "EvaluateMovement":

    break;
    
    case "Dead":
        sprite_index = DeathAnimation;
        oBattleScreen.Players -= 1;
        map[gridX,gridY].occupant = noone;
        State = "Death";
        oCursor.Party[PartyNumber] = noone;
        oPlayerPortrait.Deactive = true;
        ds_list_add(oBattleScreen.DeadPlayers,id);
        AbilityCooldown1 = 0;
        AbilityCooldown2 = 0;
    break;
    
    case "Resurrection":
        Resurrection();
        HitPoints = MaxHitPoints/2;
        oPlayerPortrait.Deactive = false;
    break;
    
    case "Stunned":
        sprite_index = Stunned;
        StunDuration -= DELTA_TIME;
        if StunDuration &lt;= 0{
            State = "Idle";
        
        }
    break;
    
    case "UsingTeamAbility":
        
    
    break;
    
    case "TeamAbility":
    
    
    break;
    
    case "Pause":
        GamePause();
    
    break;
    
    case "Paused":
        image_index = AnimationFrame;
        
    break;
    
    case"Unpause":
        State = PreviousState;
        image_index = AnimationFrame;
        Timer = PreviousTimer;
    break;
    
    
}
Healing();

TakeDamage();

ReduceCooldowns();

SpriteShake();

*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
