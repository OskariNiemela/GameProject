<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>RootTime = 5;

Owner = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check the tile right infront of our owner, and root any actors that are on it or around it.
if instance_exists(Owner){
    if Owner.gridX+1 &lt;= oCursor.MapWidth{
        gridX = Owner.gridX + 1;
        gridY = Owner.gridY;
    }else{
        instance_destroy();
    } 
    
    if instance_exists(map[gridX,gridY].occupant)  and map[gridX,gridY].occupant.Owner != "Player" and map[gridX,gridY].occupant != oTerrain{
        Root = instance_create(map[gridX,gridY].x,map[gridX,gridY].y,oRoot);
        Root.Owner = map[gridX,gridY].occupant;
    }
    //Check neighboring tiles for other occupants
    var  Neigbours, Neighbour;
    Neighbours = ds_list_size(map[gridX,gridY].neighbors);
    
    for (i=0;i&lt;=Neighbours-1;i+=1){
        Neighbour = ds_list_find_value(map[gridX,gridY].neighbors,i);
        if instance_exists(Neighbour.occupant) and Neighbour.occupant.Owner != "Player" and Neighbour.occupant != oTerrain{
            Root = instance_create(Neighbour.x,Neighbour.y,oRoot);   
            Root.Owner = Neighbour.occupant;
        }
    }
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
