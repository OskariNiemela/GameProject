<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sRadio</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oStuff</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>InitializeStuff(oNoMask,true);
TextBox[0] = "A";
SoundButton = sndButtonClick;
SoundRadio  = sndRadio;
SoundLoop   = sndRadioLoop;

StaticOn = false;

RadioSounds = audio_emitter_create();
audio_emitter_position(RadioSounds,x,y,0);

LoopStarted = false;
LoopStartTime = 9;
Timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch State{
    case "Talk":
        oPlayerWorld.State = "Idle";
        switch StaticOn{
            case true:
                audio_play_sound_on(RadioSounds,SoundButton,false,10);
                if audio_is_playing(SoundRadio){
                    audio_stop_sound(SoundRadio);
                }
                if audio_is_playing(SoundLoop){
                    audio_stop_sound(SoundLoop);
                }
                StaticOn = false;
                Timer = 0;
                LoopStarted = false;
            
            break;
            
            case false:
                StaticOn = true;
                audio_play_sound_on(RadioSounds,SoundButton,false,10);
                audio_play_sound_on(RadioSounds,SoundRadio,false,10);
            
            break;
        }
        State = "Idle";
    break;

}
if StaticOn{
    //if LoopStarted = false{
        Timer += DELTA_TIME;
        if Timer &gt;= LoopStartTime{
            LoopStarted = true;
            Timer = 0;
            audio_play_sound_on(RadioSounds,SoundLoop,false,10);
        }
    //}
}

if Depth {
    depth = 60/(y/20);

}else{
    depth = 1000;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
