<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPunchingBagBattle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oAi</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>InitializeAi("Enemy", "Crow", "Melee", sPunchingBagBattle, sPunchingBagBattle, sPunchingBagBattle,sPunchingBagBattle,sPunchingBagBattle,sPunchingBagBattle,sPunchingBagBattle,sPunchingBagBattle,false,sPunchingBagBattle);

InitializeAISound(sndGunShot2,sndBlank,sndBlank,sndBlank);

InitializeAIStats(2, 0, 0, 0, 6, 5);
InitializeAIAbilities(oFireShot,sCrowBattleAttack, 10);

//AI Stuff

Target = noone;

Assess = false;


image_speed = AnimationSpeed;

//AttackTime = BaseAttackTime/(0.25*Speed)
AttackTime = 10/(0.30*Speed);
//MovementTime = BaseMovementTime / (0.5*Speed);
MovementTime = 16/(0.5*Speed);

//Attack timer is the time the AI waits between attacks.
AttackTimer = AttackTime;
//MovementTimer is the time the AI waits between moving one tile.
MovementTimer = MovementTime;
Destination = noone;

EnemiesOnRow = false;

var i;
i = 0;
repeat(4){
    ThreatCandidates[i] = noone;
    i += 1;
}
//

ModHP = 0;
ModMAttack = 0;
ModSAttack = 0;
ModRAttack = 0;
ModSpeed   = 0;
ModAP      = 0;
ModCritStr = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch State{


    case "Idle":
        if sprite_index != Idle{
            sprite_index = Idle
        }
        
    break;
    
    case "Dead":
        map[gridX,gridY].occupant = noone;
        depth = 15;
        oBattleScreen.EncounterSize -= 1;
        AttackTimer = 10;
        sprite_index = sPunchingBagBattle
        MovementTimer = 10;
        State = "Deactive";
    break;
}

TakeDamage();
SpriteShake();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
