<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Owner = noone;

State = "Decapitate";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch State{
    case "Decapitate":
        if instance_exists(Owner){
            Owner.BodyIsWhole = false;
            Torso = instance_create(Owner.x,Owner.y,Owner.Torso);
            if Owner.gridX &lt; 7{
                Torso.gridX = round(random_range(8,13));
            }else{
                Torso.gridX = round(random_range(0,7));
            }
            Torso.gridY = choose(0,1,2,3,4,5,6,7);
            //If there is someone already in the Torsos intended space
            if instance_exists(map[Torso.gridX,Torso.gridY].occupant){
                //Search for an open spot
                while(map[Torso.gridX,Torso.gridY].occupant != noone){
                    Torso.gridY = choose(0,1,2,3,4,5,6,7);
                    Torso.gridX = round(random_range(8,13));
                }
            
            }
            Torso.Owner = Owner;
            Torso.OwnerX = Owner.gridX;
            Torso.OwnerY = Owner.gridY;
            map[Torso.gridX,Torso.gridY].occupant = Torso;
            oCursor.Party[Owner.PartyNumber] = Torso;
            State = "Finished";
        }
    
    
    break;

    case "Finished":
        instance_destroy();
    
    break






}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
