<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sFireSpit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Owner = noone;

gridX = 0;
gridY = 0;

Damage = 2;


State = "Idle";

image_speed = AnimationSpeed;
AnimationTime = image_number*DELTA_TIME/image_speed;
Timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Timer += DELTA_TIME;

switch State
{
    case "Check":
        //Check if there are any actors in our line of fire, if yes damage then and also check if there is a slime in the same tile
        //If there is a slime destroy it and make a DoT fire appear on the actor who had the slime
        
        //Check the first 3 tiles infront of us
        for(a=-1;a&lt;2;a++)
        {
            //
            if (gridY+a &lt; 8) and (gridY+a&gt;0) and (gridX-1 &gt;= 0)
            {
                if(instance_exists(map[gridX-1,gridY+a].occupant))
                {
                       map[gridX-1,gridY+a].occupant.Damage += Damage;
                       //Check for slime VOIS
                       slim = collision_rectangle(map[gridX-1,gridY+a].x-20,map[gridX-1,gridY+a].y-20,map[gridX-1,gridY+a].x+20,map[gridX-1,gridY+a].y+20,oSlime,false,true);
                       if(slim != noone)
                       {
                            instance_destroy(slim);
                            var flamaeDoT;
                            flamaeDot = instance_create(x,y,oFireDoT);
                            flamaeDot.Target = map[gridX-1,gridY+a].occupant;
                       }
                }
            }
        
        }
        
        //Check the second 3 tiles infront of us
        for(a=-1;a&lt;2;a++)
        {
            if (gridY+a &lt; 8) and (gridY+a&gt;0) and (gridX-2 &gt;= 0)
            {
                if(instance_exists(map[gridX-2,gridY+a].occupant))
                {
                       map[gridX-2,gridY+a].occupant.Damage += Damage;
                       //Check for slime VOIS
                       slim = collision_rectangle(map[gridX-2,gridY+a].x-20,map[gridX-2,gridY+a].y-20,map[gridX-2,gridY+a].x+20,map[gridX-2,gridY+a].y+20,oSlime,false,true);
                       if(slim != noone)
                       {
                            instance_destroy(slim);
                            var flamaeDoT;
                            flamaeDot = instance_create(x,y,oFireDoT);
                            flamaeDot.Target = map[gridX-2,gridY+a].occupant;
                       }
                }
            }
        
        }
        
        //Check the third 5 tiles infront of us
        for(a=-2;a&lt;3;a++)
        {
            if (gridY+a &lt; 8) and (gridY+a&gt;0) and (gridX-3 &gt;= 0)
            {
                if(instance_exists(map[gridX-3,gridY+a].occupant))
                {
                       map[gridX-3,gridY+a].occupant.Damage += Damage;
                       //Check for slime VOIS
                       slim = collision_rectangle(map[gridX-3,gridY+a].x-20,map[gridX-3,gridY+a].y-20,map[gridX-3,gridY+a].x+20,map[gridX-3,gridY+a].y+20,oSlime,false,true);
                       if(slim != noone)
                       {
                            instance_destroy(slim);
                            var flamaeDoT;
                            flamaeDot = instance_create(x,y,oFireDoT);
                            flamaeDot.Target = map[gridX-3,gridY+a].occupant;
                       }
                }
            }
        }
        State = "Animate";
    break;
    
    case "Animate":
    
    if Timer &gt;= AnimationTime
    {
        instance_destroy();
    }
    
    break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
