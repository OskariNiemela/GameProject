<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBossHandidle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = "Pause";

moveSet[0] = oRockThrow;

blocking = sMayorAir;

startX = x;
startY = y;

bezierTime = 1;
bezierTimer = 0;

TimeBetween = 2;
TimerBetween = 0;

gridX = 0;
gridY = 0;
prepRock = sPridePush;
retRock = sPridePushReturn;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch state
{
    case "Descent":
        endX = x;
        endY = map[gridX,gridY].y;
        midY = endY -400;
        midX = x;
        state = "Descending";
    break;
    
    case "Descending":
        y = MoveInBezierCurve(bezierTimer/bezierTime,startY,midY,endY);
        bezierTimer += DELTA_TIME;
        if(bezierTimer &gt;= bezierTime)
        {
            y = endY;
            state = "Pause";
        }
    break;
    
    case "Pause":
        if owner.State != "Paused"
        {
            state = "Idle";
        }
    break;
    
    case "Idle":
        TimerBetween += DELTA_TIME;
        if TimerBetween &gt;= TimeBetween
        {
            TimerBetween = 0;
            state = "ChooseAction";
        }
    break;
    
    case "ChooseAction":
        var achtung; 
        achtung = irandom(array_length_1d(moveSet)-1);
        switch moveSet[achtung]
        {
            case oRockThrow:
                state = "ThrowRock";
            break;
        }
        
    break;
    
    case "ThrowRock":
        if sprite_index != prepRock
        {
            SetAnimation(prepRock)
        }
        Timer += DELTA_TIME;
        if Timer &gt;= AnimationTime
        {
            var obj
            obj = instance_create(x,y,oRockThrow);
            obj.gridX = gridX;
            obj.gridY = gridY;
            obj.state = "Launch";
            state = "ReturnRock";
            
        }
    break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(500,500,state);
draw_text(600,600,TimerBetween);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
