<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gridX = noone;
gridY = noone;

DamageGiven = 4;

Idle = sSpikeIdle;
Spawning = sSpikeAppear;
Retraction = sSpikeRetract;
Spike = sSpikeSpiking;

TimeTillRetraction = 10;

State = "Spawn";

Target = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if gridX != noone and gridY != noone{
    switch State{
        case "Spawn":
            if sprite_index != Spawning{
                sprite_index = Spawning;
                image_index = 0;
                AnimationTime = image_number*DELTA_TIME/image_speed;
                Timer = 0;
            
            }
            Timer += DELTA_TIME;
            if Timer &gt;= AnimationTime{
                State = "Idle";
                sprite_index = Idle;
            }
            if instance_exists(map[gridX,gridY].occupant) and map[gridX,gridY].occupant.Owner != "Enemy"{
                State = "Spike";
                Target = map[gridX,gridY].occupant;
            }
        break;
        
        case "Idle":
            TimeTillRetraction -= DELTA_TIME
             if instance_exists(map[gridX,gridY].occupant) and map[gridX,gridY].occupant.Owner != "Enemy"{
                State = "Spike";
                Target = map[gridX,gridY].occupant;
            }
            if TimeTillRetraction &lt;= 0{
                State = "Retract";
            }
        break;
        
        case "Retract":
            if sprite_index != Retraction{
                sprite_index = Retraction;
                image_index = 0;
                AnimationTime = image_number*DELTA_TIME/image_speed;
                Timer = 0;
            } 
            Timer += DELTA_TIME;
            if Timer &gt;= AnimationTime{
                instance_destroy();
            
            }
            
        break;
    
        case "Spike":
            if sprite_index != Spike{
                GiveDamage(Target,DamageGiven,5);
                sprite_index = Spike;
                image_index = 0;
                AnimationTime = image_number*DELTA_TIME/image_speed;
                Timer = 0;
            }
            Timer += DELTA_TIME;
            if Timer &gt;= AnimationTime{
                instance_destroy();
            }    
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
