<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sWoodenChest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oStuff</parentName>
  <maskName>sWoodenChestMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>TextBox[0] = "Nothing there";
InitializeStuff(oWoodenChestMask,true);
State = "Idling";
Timer = 0;
ChestSounds = audio_emitter_create();
audio_emitter_position(ChestSounds,x,y,0);
IdleAnim = sWoodenChest;
OpenAnim = sWoodenChestOpen;
CloseAnim = sWoodenChestClose;
IdleOpen = sWoodenChestOpenIdle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch State{
    case "Talk":
        if sprite_index != OpenAnim{
            if(oSFX.SFXGain &gt; 0)
            {
                audio_emitter_gain(ChestSounds,oSFX.SFXGain);
            }
            else
            {
                audio_emitter_gain(ChestSounds,0);
            }
            audio_play_sound_on(ChestSounds,sndChestOpenShort,false,10);
            sprite_index = OpenAnim;
            image_index = 0;
            Timer = 0;
            image_speed = 8*DELTA_TIME;
            AnimationTime = image_number*DELTA_TIME/image_speed;
        }
        Timer += DELTA_TIME;
        if Timer &gt;= AnimationTime{
            sprite_index = IdleOpen;
            image_index = 0;
            Timer = 0;
            image_speed = 0;
            var MessageLength, Number;
            MessageLength = array_length_1d(TextBox);
            Number = 0;
            repeat MessageLength{
                CurrentMessage[Number] = TextBox[Number];
                Number += 1;
            }
            DescriptionInput(MessageLength);
            State = "Idling";
        }
        
    break;

    case "Idle":
        if sprite_index != CloseAnim{
            if(oSFX.SFXGain &gt; 0)
            {
                audio_emitter_gain(ChestSounds,oSFX.SFXGain);
            }
            else
            {
                audio_emitter_gain(ChestSounds,0);
            }
            audio_play_sound_on(ChestSounds,sndChestClose,false,10);
            sprite_index = CloseAnim;
            image_index = 0;
            Timer = 0;
            image_speed = 8*DELTA_TIME;
            AnimationTime = image_number*DELTA_TIME/image_speed;
        
        }
        Timer += DELTA_TIME;
        
        if Timer &gt;= AnimationTime{
            sprite_index = IdleAnim;
            State = "Idling";
        }
    break;
}

if Depth {
    depth = 60/(y/20);

}else{
    depth = 1000;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_emitter_free(ChestSounds);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
